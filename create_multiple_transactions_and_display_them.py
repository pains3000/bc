# -*- coding: utf-8 -*-
"""Create multiple transactions and display them.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bZa4rO6Sk-W-0NgXIaw1FaBYkudVRfzt
"""

class Client:

    def __init__(self):
        self.identity = "Client Identity"

class Transaction:
    def __init__(self, sender, recipient, value):
        self.sender = sender
        self.recipient = recipient
        self.value = value
        self.time = "Transaction Time"  

    def to_dict(self):
        return {
            'sender': self.sender,
            'recipient': self.recipient,
            'value': self.value,
            'time': self.time
        }

    def sign_transaction(self):
        
        pass

def display_transaction(transaction):
    transaction_dict = transaction.to_dict()
    print("sender: " + transaction_dict['sender'])
    print('-----')
    print("recipient: " + transaction_dict['recipient'])
    print('-----')
    print("value: " + str(transaction_dict['value']))
    print('-----')
    print("time: " + str(transaction_dict['time']))
    print('-----')

transactions = []
Dinesh = Client()
Ramesh = Client()
Seema = Client()
Vijay = Client()
t1 = Transaction(Dinesh.identity, Ramesh.identity, 15.0)
t1.sign_transaction()
transactions.append(t1)
t2 = Transaction(Dinesh.identity, Seema.identity, 6.0)
t2.sign_transaction()
transactions.append(t2)
t3 = Transaction(Ramesh.identity, Vijay.identity, 2.0)
t3.sign_transaction()
transactions.append(t3)
t4 = Transaction(Seema.identity, Ramesh.identity, 4.0)
t4.sign_transaction()
transactions.append(t4)
t5 = Transaction(Vijay.identity, Seema.identity, 7.0)
t5.sign_transaction()
transactions.append(t5)

t6 = Transaction(Ramesh.identity, Seema.identity, 3.0)
t6.sign_transaction()
transactions.append(t6)

t7 = Transaction(Seema.identity, Dinesh.identity, 8.0)
t7.sign_transaction()
transactions.append(t7)

t8 = Transaction(Seema.identity, Ramesh.identity, 1.0)
t8.sign_transaction()
transactions.append(t8)

t9 = Transaction(Vijay.identity, Dinesh.identity, 5.0)
t9.sign_transaction()
transactions.append(t9)

t10 = Transaction(Vijay.identity, Ramesh.identity, 3.0)
t10.sign_transaction()
transactions.append(t10)

# Displaying transactions
for transaction in transactions:
    display_transaction(transaction)
    print('--------------')

class Block:
    def __init__(self):
        self.verified_transactions = []
        self.previous_block_hash = ""
        self.Nonce = ""

def hash_block(block):
    # Placeholder for block hashing, could be something like SHA-256
    return "hashed_block_string"

last_block_hash = ""
Dinesh = Client()
t0 = Transaction("Genesis", Dinesh.identity, 500.0)

block0 = Block()
block0.previous_block_hash = None
block0.verified_transactions.append(t0)

digest = hash_block(block0)
last_block_hash = digest

TPCoins = []

def dump_blockchain(blockchain):
    print("Number of blocks in the chain: " + str(len(blockchain)))
    for x in range(len(blockchain)):
        block_temp = blockchain[x]
        print("block # " + str(x))
        for transaction in block_temp.verified_transactions:
            display_transaction(transaction)
            print('--------------')
        print('=====================================')

TPCoins.append(block0)
dump_blockchain(TPCoins)
